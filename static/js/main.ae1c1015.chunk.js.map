{"version":3,"sources":["styles/imgs/search.png","styles/imgs/blackHeart.png","styles/imgs/redHeart.png","styles/imgs/autumn.jpg","styles/imgs/spring.jpg","styles/imgs/summer.jpg","styles/imgs/winter.jpg","history.js","reducers/WeatherReducer.js","contexts/WeatherContext.js","services/storageService.js","services/WeatherService.js","components/Header.js","components/WeatherPreview.js","components/WeatherList.js","pages/Home.js","pages/Favorites.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","initialState","weather","degreesunits","name","WeatherReducer","state","action","type","forecast","unit","WeatherContext","createContext","WeatherContextProvider","props","useReducer","dispatch","Provider","value","children","query","get","post","put","entityType","updatedEntity","then","entities","idx","findIndex","entity","splice","_save","remove","a","JSON","parse","localStorage","getItem","newEntity","push","entityName","item","find","console","log","setItem","stringify","getWeatherOfTheWeek","getWeatherOfTheDay","getAutoComplete","location","axios","data","DailyForecasts","storageService","Header","curWeather","goSearch","useState","appear","setAppear","searchValue","setSearchValue","favorite","setFavorite","autoComplete","setAutoComplete","curImage","setCurImage","useContext","minTemp","Temperature","Minimum","Value","maxTemp","Maximum","ev","english","target","test","toLowerCase","length","WeatherService","favoriteCity","currentCity","useEffect","checkIfFavorite","imgUrl","Winter","Spring","Autumn","Summer","setbackGroundImg","className","style","backgroundImage","onClick","src","RedHeart","BlackHeart","SearchImg","placeholder","onChange","map","city","key","Key","chooseFromAutoComplete","LocalizedName","Day","Icon","Math","round","WeatherPreview","curWeatherPerDay","day","setDay","dayToWord","Date","getDay","WeatherList","slice","EpochDate","Home","Fragment","Favorites","favorites","setFavorites","useHistory","getFavoriteFromStoage","handleFavorite","NavBar","btnStatus","setBtnStatus","userPref","document","documentElement","getAttribute","loadUserPerf","activeClassName","to","exact","id","htmlFor","setAttribute","checked","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae1c1015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.9d3b8c4d.png\";","module.exports = __webpack_public_path__ + \"static/media/blackHeart.77162ab8.png\";","module.exports = __webpack_public_path__ + \"static/media/redHeart.c182f8d9.png\";","module.exports = __webpack_public_path__ + \"static/media/autumn.2c7f5dcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spring.324c7dad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/summer.47135622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/winter.31dd2e1e.jpg\";","import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","let initialState = {\r\n    weather: [],\r\n    degreesunits: '',\r\n    name:''\r\n}\r\n\r\nexport default function WeatherReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_WEATHEROFTHEWEEK':\r\n            return { ...state, weather: action.forecast };\r\n        case 'SET_UNITS':\r\n            return { ...state, degreesunits: action.unit };\r\n        case 'SET_NAME':\r\n            return { ...state, name: action.name };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport WeatherReducer from '../reducers/WeatherReducer'\r\n\r\nexport const WeatherContext = createContext()\r\n\r\nconst WeatherContextProvider = (props) => {\r\n    const [{ weather, name, degreesunits }, dispatch] = useReducer(WeatherReducer, { weather: [], name:'tel aviv', degreesunits: 'C' })\r\n    return (\r\n        <WeatherContext.Provider value={{ weather, name, degreesunits, dispatch }}>\r\n            {props.children}\r\n        </WeatherContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default WeatherContextProvider\r\n","\r\nexport default {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n\r\n    _save\r\n    \r\n}\r\n\r\nasync function query(entityType) {\r\n    let entities = await JSON.parse(localStorage.getItem(entityType)) || []\r\n    return entities\r\n}\r\n\r\n\r\nasync function post(entityType, newEntity) {\r\n    let entities = await query(entityType)\r\n    entities.push(newEntity);\r\n    _save(entityType, entities)\r\n    return newEntity;\r\n}\r\n\r\n\r\nasync function get(entityType, entityName) {\r\nlet entities=await query(entityType)\r\n       let item= entities.find(entity => entity.name === entityName)\r\n       return item\r\n}\r\n\r\n\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity.name === updatedEntity.name);\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity;\r\n        })\r\n}\r\n\r\nasync function remove(entityType, entityName) {\r\n    console.log(entityType,entityName);\r\n    let entities = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity.name === entityName);\r\n    console.log(idx);\r\n    entities.splice(idx, 1)\r\n    _save(entityType, entities)\r\n}\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport storageService from './storageService'\r\n\r\n\r\nexport default {\r\n    getWeatherOfTheWeek,\r\n    getWeatherOfTheDay,\r\n    getAutoComplete\r\n}\r\n\r\nasync function getWeatherOfTheWeek(location) {\r\n    let { data } = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/search?apikey=MWtBxp2J0vWMapPa9OKaNck8mxGWosii&q=${location}`)\r\n    let weather = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${data[0]['Key']}?apikey=MWtBxp2J0vWMapPa9OKaNck8mxGWosii`)\r\n    console.log('weather.data.DailyForecasts',weather.data.DailyForecasts);\r\n    storageService.post(`${location}WeatherOfTheWeek`, weather.data.DailyForecasts)\r\n    return weather.data.DailyForecasts || [];\r\n}\r\n\r\n\r\nasync function getWeatherOfTheDay(location) {\r\n    let { data } = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/search?apikey=MWtBxp2J0vWMapPa9OKaNck8mxGWosii&q=${location}`)\r\n    let weather = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/1day/${data[0]['Key']}?apikey=MWtBxp2J0vWMapPa9OKaNck8mxGWosii`)\r\n    storageService.post(`${location}WeatherOfTheDay`, weather.data.DailyForecasts)\r\n    return weather.data.DailyForecasts || [];\r\n}\r\n\r\nasync function getAutoComplete(location) {\r\n    let { data } = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=MWtBxp2J0vWMapPa9OKaNck8mxGWosii&q=${location}`)\r\n    return data\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport SearchImg from '../styles/imgs/search.png'\r\nimport WeatherService from '../services/WeatherService'\r\nimport storageService from '../services/storageService'\r\n\r\nimport BlackHeart from '../styles/imgs/blackHeart.png'\r\nimport RedHeart from '../styles/imgs/redHeart.png'\r\nimport { WeatherContext } from '../contexts/WeatherContext'\r\n\r\nimport Autumn from '../styles/imgs/autumn.jpg'\r\nimport Spring from '../styles/imgs/spring.jpg'\r\nimport Summer from '../styles/imgs/summer.jpg'\r\nimport Winter from '../styles/imgs/winter.jpg'\r\n\r\n\r\nexport default function Header({ curWeather, goSearch }) {\r\n    const [appear, setAppear] = useState(false)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [favorite, setFavorite] = useState(false)\r\n    const [autoComplete, setAutoComplete] = useState([])\r\n    const [curImage, setCurImage] = useState('')\r\n\r\n    const { name, degreesunits, dispatch } = useContext(WeatherContext)\r\n\r\n    const minTemp = curWeather[0].Temperature.Minimum.Value\r\n    const maxTemp = curWeather[0].Temperature.Maximum.Value\r\n\r\n    async function onHandleChange(ev) {\r\n        var english = /^[A-Za-z0-9]*$/;\r\n        const { value } = ev.target\r\n        if (english.test(value)) {\r\n            setSearchValue(value.toLowerCase())\r\n            if (value.length > 2) {\r\n                let autoComplete = await WeatherService.getAutoComplete(value)\r\n                setAutoComplete(autoComplete)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async function onAddFavorite() {\r\n        setFavorite(!favorite)\r\n        let favoriteCity = { name: searchValue, data: curWeather }\r\n        let currentCity = await storageService.get(`favorites`, searchValue)\r\n        if (currentCity) {\r\n            storageService.remove('favorites', searchValue)\r\n        } else {\r\n            storageService.post('favorites', favoriteCity)\r\n        }\r\n    }\r\n\r\n\r\n    function chooseFromAutoComplete(name) {\r\n        setSearchValue(name)\r\n        dispatch({ type: 'SET_NAME', name })\r\n        setAutoComplete([])\r\n    }\r\n\r\n\r\n    async function checkIfFavorite() {\r\n        let currentCity = await storageService.get(`favorites`, searchValue)\r\n        if (currentCity) {\r\n            setFavorite(true)\r\n        } else {\r\n            setFavorite(false)\r\n        }\r\n    }\r\n\r\n    function setbackGroundImg() {\r\n        let imgUrl;\r\n        switch (true) {\r\n            case curWeather[0].Temperature.Minimum.Value <= 50:\r\n                imgUrl = Winter\r\n                break;\r\n            case (curWeather[0].Temperature.Minimum.Value > 50 && curWeather[0].Temperature.Minimum.Value <= 59):\r\n                imgUrl = Spring\r\n                break;\r\n            case (curWeather[0].Temperature.Minimum.Value > 59 && curWeather[0].Temperature.Minimum.Value <= 77):\r\n                imgUrl = Autumn\r\n                break;\r\n            case (curWeather[0].Temperature.Minimum.Value > 77):\r\n                imgUrl = Summer\r\n                break;\r\n            default:\r\n        }\r\n        setCurImage(imgUrl)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        checkIfFavorite()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        goSearch(name.toLowerCase())\r\n\r\n\r\n    }, [name])\r\n\r\n    useEffect(() => {\r\n        setbackGroundImg()\r\n    }, [curWeather])\r\n\r\n    return (\r\n        <div className=\"header flex column align-center justify-center\"\r\n            style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${curImage})` }}\r\n        >\r\n            <button className=\"heart\" onClick={onAddFavorite}>\r\n                <img src={favorite ? RedHeart : BlackHeart} />\r\n            </button>\r\n\r\n            <form className=\"search-form\">\r\n                <div className=\"search-line\">\r\n                    <img onClick={() => setAppear(!appear)} src={SearchImg}></img>\r\n                    <input className=\"\"\r\n                        value={searchValue}\r\n                        type='text' placeholder=\"Search location...\"\r\n                        onChange={onHandleChange}\r\n                    ></input>\r\n                </div>\r\n                <div className=\"autoCompleteList flex column \">\r\n                    {autoComplete.length > 0 ? autoComplete.map(city =>\r\n                        <p key={city.Key} onClick={() =>\r\n                            chooseFromAutoComplete(city.LocalizedName)\r\n\r\n                        } >{city.LocalizedName}</p>\r\n                    ) : ''}\r\n                </div>\r\n            </form>\r\n\r\n            <img className=\"weather-icon\"\r\n                src={`https://developer.accuweather.com/sites/default/files/${(curWeather[0].Day.Icon < 10) ? '0' + curWeather[0].Day.Icon : curWeather[0].Day.Icon}-s.png`}></img>\r\n            <p className=\"city\">{name}</p>\r\n            <p className=\"weather\">\r\n                {degreesunits === 'F' ? minTemp : Math.round((minTemp - 32) * 5 / 9)}°\r\n                        - {degreesunits === 'F' ? maxTemp : Math.round((maxTemp - 32) * 5 / 9)}°</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect,useContext } from 'react'\r\nimport { WeatherContext } from '../contexts/WeatherContext'\r\n\r\nexport default function WeatherPreview({ curWeatherPerDay }) {\r\n    const [day, setDay] = useState()\r\n    const minTemp = curWeatherPerDay.Temperature.Minimum.Value\r\n    const maxTemp = curWeatherPerDay.Temperature.Maximum.Value\r\n\r\n    const { degreesunits, dispatch } = useContext(WeatherContext)\r\n\r\n    function dayToWord(day) {\r\n        switch (day) {\r\n            case 0:\r\n                setDay(\"Sunday\")\r\n                break;\r\n            case 1:\r\n                setDay(\"Monday\")\r\n                break;\r\n            case 2:\r\n                setDay(\"Tuesday\")\r\n                break;\r\n            case 3:\r\n                setDay(\"Wednesday\")\r\n                break;\r\n            case 4:\r\n                setDay(\"Thursday\")\r\n                break;\r\n            case 5:\r\n                setDay(\"Friday\")\r\n                break;\r\n            case 6:\r\n                setDay(\"Saturday\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dayToWord(new Date(Date.parse(curWeatherPerDay.Date)).getDay())\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"weather-preview flex column align-center space-between\">\r\n            <img src={`https://developer.accuweather.com/sites/default/files/${(curWeatherPerDay.Day.Icon < 10) ? '0' + curWeatherPerDay.Day.Icon : curWeatherPerDay.Day.Icon}-s.png`}></img>\r\n            <p>{day}</p>\r\n            <p className=\"weather\">\r\n                {degreesunits === 'F' ? minTemp : Math.round((minTemp-32)*5/9)}°\r\n                        - {degreesunits === 'F' ?maxTemp :Math.round((maxTemp-32)*5/9)}°</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport WeatherPreview from './WeatherPreview'\r\n\r\nexport default function WeatherList({curWeather}) {\r\n    return (\r\n        <div className=\"weather-list flex align-center justify-center\">\r\n            {curWeather.slice(1).map(curWeatherPerDay=>\r\n            <WeatherPreview key={curWeatherPerDay.EpochDate} curWeatherPerDay={curWeatherPerDay}></WeatherPreview>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Header from '../components/Header'\r\nimport WeatherList from '../components/WeatherList'\r\n\r\nimport { WeatherContext } from '../contexts/WeatherContext'\r\n\r\nimport WeatherService from '../services/WeatherService'\r\nimport storageService from '../services/storageService'\r\n\r\n\r\nexport default function Home() {\r\n    const { weather,name,dispatch } = useContext(WeatherContext)\r\n\r\n    async function goSearch(value) {\r\n        let forecast;\r\n        let weather = await storageService.query(`${value}WeatherOfTheWeek`)\r\n        if (weather.length > 0) {\r\n            forecast = weather[0]\r\n        }\r\n        else {\r\n            forecast = await WeatherService.getWeatherOfTheWeek(value)\r\n        }\r\n        dispatch({ type: 'SET_WEATHEROFTHEWEEK', forecast })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        goSearch(name)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {weather.length > 0 ?\r\n                <div className=\"home flex column flex1\">\r\n                    <Header curWeather={weather} goSearch={goSearch}  ></Header>\r\n                    <WeatherList curWeather={weather}></WeatherList>\r\n                </div> : ''}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport storageService from '../services/storageService'\r\nimport { WeatherContext } from '../contexts/WeatherContext'\r\n\r\n\r\nexport default function Favorites() {\r\n\r\n    const [favorites, setFavorites] = useState([])\r\n    const { weather, dispatch } = useContext(WeatherContext)\r\n    const history = useHistory();\r\n\r\n    async function getFavoriteFromStoage() {\r\n        let favorites = await storageService.query(`favorites`)\r\n        setFavorites(favorites)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFavoriteFromStoage()\r\n    }, [])\r\n\r\n\r\n    function handleFavorite(favorite) {\r\n        let forecast = favorite.data;\r\n        let name= favorite.name\r\n        history.push(\"/\")\r\n        dispatch({ type: 'SET_WEATHEROFTHEWEEK', forecast })\r\n        dispatch({ type: 'SET_NAME', name })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {favorites.length > 0 ? favorites.map(favorite =>\r\n                <div key={favorite.name} className=\"favorites weather-preview flex column align-center space-between\"\r\n                    onClick={() => handleFavorite(favorite)}>\r\n                    <img src={`https://developer.accuweather.com/sites/default/files/${(favorite.data[0].Day.Icon < 10) ? '0'\r\n                        + favorite.data[0].Day.Icon : favorite.data[0].Day.Icon}-s.png`}></img>\r\n                    <p>{favorite.name}</p>\r\n                    <p>{favorite.data[0].Temperature.Minimum.Value}°-{favorite.data[0].Temperature.Maximum.Value}°</p>\r\n                </div>\r\n            ) : 'NO RESULTES'}\r\n        </React.Fragment>)\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport storageService from '../services/storageService'\r\nimport { WeatherContext } from '../contexts/WeatherContext'\r\n\r\nexport default function NavBar() {\r\n    const [btnStatus, setBtnStatus] = useState(false);\r\n    const { degreesunits, dispatch } = useContext(WeatherContext)\r\n\r\n    function toggleTheme() {\r\n        let status = !btnStatus;\r\n        setBtnStatus(status);\r\n        document.documentElement.setAttribute(\r\n            \"data-theme\",\r\n            btnStatus ? \"light\" : \"dark\"\r\n        );\r\n        storageService._save(\"theme\", btnStatus ? \"light\" : \"dark\");\r\n    }\r\n\r\n    function toggleDegrees() {\r\n        let unit;\r\n        if (degreesunits === 'F') {\r\n            unit = 'C'\r\n        } else {\r\n            unit = 'F'\r\n        }\r\n        dispatch({ type: 'SET_UNITS', unit })\r\n\r\n    }\r\n\r\n    function loadUserPerf() {\r\n        let userPref =\r\n            document.documentElement.getAttribute(\"data-theme\") === \"dark\";\r\n        setBtnStatus(userPref);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUserPerf();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"nav-bar flex align-center \">\r\n            <div className=\"link-wrapper flex align-center space-between\">\r\n                <div>\r\n                    <NavLink activeClassName=\"selected\" to=\"/\" exact >Home</NavLink>\r\n                    <NavLink activeClassName=\"selected\" to=\"/favorites\" exact > Favorites</NavLink>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <label\r\n                        id=\"theme-switch\"\r\n                        className=\"theme-switch\"\r\n                        htmlFor=\"checkbox_theme\">\r\n                        <input\r\n                            onChange={toggleTheme}\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox_theme\"\r\n                            checked={btnStatus}/>\r\n                    </label>\r\n\r\n\r\n                    <label\r\n                        id=\"degrees-switch\"\r\n                        className=\"degrees-switch\"\r\n                        htmlFor=\"checkbox_degrees\">\r\n                        <input\r\n                            onChange={toggleDegrees}\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox_degrees\"/>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport history from './history';\nimport WeatherContextProvider from './contexts/WeatherContext'\n\nimport Home from './pages/Home';\nimport Favorites from './pages/Favorites'\nimport NavBar from '../src/components/NavBar'\nimport './styles/global.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter history={history}>\n      <WeatherContextProvider>\n        <NavBar></NavBar>\n        <Switch>\n          <Route path=\"/favorites\" component={Favorites} exact></Route>\n          <Route path=\"/\" component={Home} exact></Route>\n\n        </Switch>\n      </WeatherContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}